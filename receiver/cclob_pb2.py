# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cclob.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x63\x63lob.proto\x12\x07message\"=\n\tMsgHeader\x12\r\n\x05\x62\x61tch\x18\x01 \x01(\x03\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12\x0e\n\x06symbol\x18\x03 \x01(\t\"\x88\x01\n\x07\x43\x43Order\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12\x0c\n\x04side\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\r\n\x05level\x18\x04 \x01(\x05\x12\r\n\x05price\x18\x05 \x01(\x01\x12\x0e\n\x06volume\x18\x06 \x01(\x01\x12\x0e\n\x06\x61mount\x18\x07 \x01(\x01\x12\x10\n\x08midprice\x18\x08 \x01(\x01\"z\n\x07\x43\x43Trade\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12\x0c\n\x04side\x18\x02 \x01(\t\x12\r\n\x05level\x18\x03 \x01(\x05\x12\r\n\x05price\x18\x04 \x01(\x01\x12\x0e\n\x06volume\x18\x05 \x01(\x01\x12\x0e\n\x06\x61mount\x18\x06 \x01(\x01\x12\x10\n\x08midprice\x18\x07 \x01(\x01\"s\n\x05\x43\x43\x42\x61r\x12\x0c\n\x04open\x18\x01 \x01(\x01\x12\x0c\n\x04high\x18\x02 \x01(\x01\x12\x0b\n\x03low\x18\x03 \x01(\x01\x12\r\n\x05\x63lose\x18\x04 \x01(\x01\x12\x0e\n\x06volume\x18\x05 \x01(\x01\x12\x10\n\x08turnover\x18\x06 \x01(\x01\x12\x10\n\x08tradenum\x18\x07 \x01(\x05\"R\n\x0f\x43\x43LevelColumnar\x12\x11\n\ttimestamp\x18\x01 \x03(\x03\x12\r\n\x05level\x18\x02 \x03(\x05\x12\r\n\x05price\x18\x03 \x03(\x01\x12\x0e\n\x06volume\x18\x04 \x03(\x01\"~\n\nCCLevelMsg\x12\"\n\x06header\x18\x01 \x01(\x0b\x32\x12.message.MsgHeader\x12%\n\x03\x62id\x18\x02 \x01(\x0b\x32\x18.message.CCLevelColumnar\x12%\n\x03\x61sk\x18\x03 \x01(\x0b\x32\x18.message.CCLevelColumnar\"Q\n\nCCOrderMsg\x12\"\n\x06header\x18\x01 \x01(\x0b\x32\x12.message.MsgHeader\x12\x1f\n\x05order\x18\x02 \x03(\x0b\x32\x10.message.CCOrder\"Q\n\nCCTradeMsg\x12\"\n\x06header\x18\x01 \x01(\x0b\x32\x12.message.MsgHeader\x12\x1f\n\x05trade\x18\x02 \x03(\x0b\x32\x10.message.CCTrade\"Y\n\x08\x43\x43\x42\x61rMsg\x12\"\n\x06header\x18\x01 \x01(\x0b\x32\x12.message.MsgHeader\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x1b\n\x03\x62\x61r\x18\x03 \x01(\x0b\x32\x0e.message.CCBarb\x06proto3')



_MSGHEADER = DESCRIPTOR.message_types_by_name['MsgHeader']
_CCORDER = DESCRIPTOR.message_types_by_name['CCOrder']
_CCTRADE = DESCRIPTOR.message_types_by_name['CCTrade']
_CCBAR = DESCRIPTOR.message_types_by_name['CCBar']
_CCLEVELCOLUMNAR = DESCRIPTOR.message_types_by_name['CCLevelColumnar']
_CCLEVELMSG = DESCRIPTOR.message_types_by_name['CCLevelMsg']
_CCORDERMSG = DESCRIPTOR.message_types_by_name['CCOrderMsg']
_CCTRADEMSG = DESCRIPTOR.message_types_by_name['CCTradeMsg']
_CCBARMSG = DESCRIPTOR.message_types_by_name['CCBarMsg']
MsgHeader = _reflection.GeneratedProtocolMessageType('MsgHeader', (_message.Message,), {
  'DESCRIPTOR' : _MSGHEADER,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.MsgHeader)
  })
_sym_db.RegisterMessage(MsgHeader)

CCOrder = _reflection.GeneratedProtocolMessageType('CCOrder', (_message.Message,), {
  'DESCRIPTOR' : _CCORDER,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCOrder)
  })
_sym_db.RegisterMessage(CCOrder)

CCTrade = _reflection.GeneratedProtocolMessageType('CCTrade', (_message.Message,), {
  'DESCRIPTOR' : _CCTRADE,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCTrade)
  })
_sym_db.RegisterMessage(CCTrade)

CCBar = _reflection.GeneratedProtocolMessageType('CCBar', (_message.Message,), {
  'DESCRIPTOR' : _CCBAR,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCBar)
  })
_sym_db.RegisterMessage(CCBar)

CCLevelColumnar = _reflection.GeneratedProtocolMessageType('CCLevelColumnar', (_message.Message,), {
  'DESCRIPTOR' : _CCLEVELCOLUMNAR,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCLevelColumnar)
  })
_sym_db.RegisterMessage(CCLevelColumnar)

CCLevelMsg = _reflection.GeneratedProtocolMessageType('CCLevelMsg', (_message.Message,), {
  'DESCRIPTOR' : _CCLEVELMSG,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCLevelMsg)
  })
_sym_db.RegisterMessage(CCLevelMsg)

CCOrderMsg = _reflection.GeneratedProtocolMessageType('CCOrderMsg', (_message.Message,), {
  'DESCRIPTOR' : _CCORDERMSG,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCOrderMsg)
  })
_sym_db.RegisterMessage(CCOrderMsg)

CCTradeMsg = _reflection.GeneratedProtocolMessageType('CCTradeMsg', (_message.Message,), {
  'DESCRIPTOR' : _CCTRADEMSG,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCTradeMsg)
  })
_sym_db.RegisterMessage(CCTradeMsg)

CCBarMsg = _reflection.GeneratedProtocolMessageType('CCBarMsg', (_message.Message,), {
  'DESCRIPTOR' : _CCBARMSG,
  '__module__' : 'cclob_pb2'
  # @@protoc_insertion_point(class_scope:message.CCBarMsg)
  })
_sym_db.RegisterMessage(CCBarMsg)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MSGHEADER._serialized_start=24
  _MSGHEADER._serialized_end=85
  _CCORDER._serialized_start=88
  _CCORDER._serialized_end=224
  _CCTRADE._serialized_start=226
  _CCTRADE._serialized_end=348
  _CCBAR._serialized_start=350
  _CCBAR._serialized_end=465
  _CCLEVELCOLUMNAR._serialized_start=467
  _CCLEVELCOLUMNAR._serialized_end=549
  _CCLEVELMSG._serialized_start=551
  _CCLEVELMSG._serialized_end=677
  _CCORDERMSG._serialized_start=679
  _CCORDERMSG._serialized_end=760
  _CCTRADEMSG._serialized_start=762
  _CCTRADEMSG._serialized_end=843
  _CCBARMSG._serialized_start=845
  _CCBARMSG._serialized_end=934
# @@protoc_insertion_point(module_scope)
